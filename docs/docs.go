// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth": {
            "post": {
                "description": "Принимает строку initData и создает нового пользователя, если он еще не зарегистрирован",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Авторизация по initData",
                "parameters": [
                    {
                        "description": "InitData от Telegram",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.InitDataRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь уже зарегистрирован",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "201": {
                        "description": "Пользователь успешно авторизован (создан)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Неверные данные запроса или ошибка парсинга",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера (БД, транзакция и т.п.)",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/users": {
            "get": {
                "description": "Возвращает всех пользователей из таблицы \"user\".",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Авторизация"
                ],
                "summary": "Получить список пользователей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/profiles": {
            "get": {
                "description": "Возвращает массив профилей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Профили"
                ],
                "summary": "Получить список профилей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Profile"
                            }
                        }
                    }
                }
            }
        },
        "/teams": {
            "get": {
                "description": "Возвращает массив команд",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Команды"
                ],
                "summary": "Получить список команд",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Team"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Добавляет новую команду в систему",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Команды"
                ],
                "summary": "Создать команду",
                "parameters": [
                    {
                        "description": "Данные команды",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TeamCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Team"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/teams/players/count/{team_name}": {
            "get": {
                "description": "Возвращает количество игроков в команде по имени. Если команд с таким именем несколько, вернёт массив.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь и команды"
                ],
                "summary": "Получить количество игроков в команде",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Название команды",
                        "name": "team_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TeamWithCount"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Возвращает массив пользователей",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Получить список пользователей",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Создает нового пользователя и профиль для него в одном запросе",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователи"
                ],
                "summary": "Создать пользователя с профилем",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно создан",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Неверные данные запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось создать пользователя",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/by-tg/{tg_userid}/profile": {
            "post": {
                "description": "Добавляет запись в таблицу profiles и обновляет поле profile_id у пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Профили"
                ],
                "summary": "Создание профиля и привязка к пользователю",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Telegram ID пользователя",
                        "name": "tg_userid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные профиля",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ProfileCreateFirstDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Профиль успешно создан и привязан",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Неверный ввод",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/team/{team_id}": {
            "get": {
                "description": "Возвращает список пользователей, принадлежащих к команде с указанным ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь и команды"
                ],
                "summary": "Получение пользователей по ID команды",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID команды",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AuthRequestDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Ошибка при выполнении запроса или сканировании",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/team": {
            "delete": {
                "description": "Убирает пользователя из команды, устанавливая team_id в NULL",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь и команды"
                ],
                "summary": "Выход пользователя из команды",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь покинул команду",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Недопустимые параметры запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось покинуть команду",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/{user_id}/team/{team_id}": {
            "post": {
                "description": "Добавляет пользователя в команду по ID команды и ID пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Пользователь и команды"
                ],
                "summary": "Присоединение пользователя к команде",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID команды",
                        "name": "team_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID пользователя",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь присоединен к команде",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Недопустимые параметры запроса",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Не удалось присоединиться к команде",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AuthRequestDTO": {
            "type": "object",
            "properties": {
                "allows_write_to_pm": {
                    "type": "boolean"
                },
                "auth_date": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "is_premium": {
                    "type": "boolean"
                },
                "language_code": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.InitDataRequest": {
            "type": "object",
            "required": [
                "initData"
            ],
            "properties": {
                "initData": {
                    "type": "string"
                }
            }
        },
        "models.Profile": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "app_language": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "foot": {
                    "type": "string"
                },
                "games_played": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "playing_frequency": {
                    "type": "integer"
                },
                "pref_position": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.ProfileCreateFirstDTO": {
            "type": "object",
            "properties": {
                "app_language": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                }
            }
        },
        "models.ProfileCreateRequest": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "foot": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "pref_position": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "models.Team": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "photo": {
                    "type": "string"
                },
                "playing_in": {
                    "type": "string",
                    "format": "date-time"
                },
                "stadium": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "models.TeamCreateRequest": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "playing_in": {
                    "type": "string",
                    "format": "date-time"
                },
                "stadium": {
                    "type": "string"
                },
                "team_name": {
                    "type": "string"
                }
            }
        },
        "models.TeamWithCount": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "players_count": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "allows_write_to_pm": {
                    "type": "boolean"
                },
                "auth_date": {
                    "type": "integer"
                },
                "first_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_premium": {
                    "type": "boolean"
                },
                "language_code": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/models.Profile"
                },
                "profile_id": {
                    "type": "integer"
                },
                "team": {
                    "$ref": "#/definitions/models.Team"
                },
                "team_id": {
                    "type": "integer"
                },
                "tg_userid": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.UserCreateRequest": {
            "type": "object",
            "required": [
                "first_name",
                "language_code",
                "last_name",
                "username"
            ],
            "properties": {
                "allows_write_to_pm": {
                    "type": "boolean"
                },
                "first_name": {
                    "type": "string"
                },
                "language_code": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "profile_create_request": {
                    "$ref": "#/definitions/models.ProfileCreateRequest"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "My API",
	Description:      "API for my Go project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
